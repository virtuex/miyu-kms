CREATE DATABASE IF NOT EXISTS miyu_kms CHARACTER SET UTF8MB4;
USE miyu_kms;
-- 用户表
CREATE TABLE IF NOT EXISTS T_USER
(
    USER_ID       INT          NOT NULL COMMENT '用户ID',
    USER_NAME     VARCHAR(255) NOT NULL COMMENT '用户名',
    USER_TYPE     VARCHAR(255) NOT NULL COMMENT '用户类型',
    USER_PASSWORD VARCHAR(255) NOT NULL COMMENT '密码',
    CREATED_TIME  DATETIME COMMENT '创建时间',
    UPDATED_BY    INT          NOT NULL COMMENT '更新人',
    UPDATED_TIME  DATETIME     NOT NULL COMMENT '更新时间',
    USER_DESC     VARCHAR(255) NOT NULL COMMENT '用户描述',
    PRIMARY KEY (USER_ID, UPDATED_BY, UPDATED_TIME, USER_DESC)
) COMMENT = '';
-- 租户表
CREATE TABLE IF NOT EXISTS T_TENANT
(
    TENANT_ID    INT          NOT NULL COMMENT '租户主键id',
    TENANT_NAME  VARCHAR(255) NOT NULL COMMENT '租户名称',
    TENANT_DES   VARCHAR(255) COMMENT '租户描述',
    CREATED_TIME DATETIME COMMENT '创建时间',
    UPDATED_BY   INT          NOT NULL COMMENT '更新人',
    UPDATED_TIME DATETIME     NOT NULL COMMENT '更新时间',
    CREATED_BY   DATETIME     NOT NULL COMMENT '创建人',
    PRIMARY KEY (TENANT_ID, UPDATED_BY, UPDATED_TIME, CREATED_BY)
) COMMENT = '';

-- 主密钥(对称算法)
CREATE TABLE IF NOT EXISTS T_MASTER_KEY
(
    MK_ID        INT          NOT NULL COMMENT '主密钥ID',
    MK_ALIAS     VARCHAR(255) NOT NULL COMMENT '别名',
    MK_DESC      VARCHAR(255) COMMENT '描述',
    MK_TYPE      VARCHAR(255) COMMENT '主密钥类型，是谁使用密钥',
    MK_ALGORITHM VARCHAR(255) COMMENT '密钥算法类型',
    MK_PADDING   VARCHAR(255) COMMENT '填充',
    MK_USER_ID   INT COMMENT 'mk对应的用户',
    MK_MODE      VARCHAR(255) COMMENT '模式',
    CREATED_TIME DATETIME     NOT NULL COMMENT '创建时间',
    UPDATED_BY   VARCHAR(32)  NOT NULL COMMENT '更新人',
    UPDATED_TIME DATETIME     NOT NULL COMMENT '更新时间',
    PRIMARY KEY (MK_ID, CREATED_TIME, UPDATED_BY, UPDATED_TIME)
) COMMENT = '';

-- 主密钥对（非对称算法）
CREATE TABLE IF NOT EXISTS T_MASTER_KEYPAIR
(
    MK_ID        INT          NOT NULL COMMENT '主密钥ID',
    MK_ALIAS     VARCHAR(255) NOT NULL COMMENT '别名',
    MK_DESC      VARCHAR(255) COMMENT '描述',
    MK_TYPE      VARCHAR(255) COMMENT '主密钥类型，是谁使用密钥',
    MK_ALGORITHM VARCHAR(255) COMMENT '密钥算法类型',
    MK_USER_ID   INT COMMENT 'mk对应的user id',
    CREATED_TIME DATETIME     NOT NULL COMMENT '创建时间',
    UPDATED_BY   INT          NOT NULL COMMENT '更新人',
    UPDATED_TIME DATETIME     NOT NULL COMMENT '更新时间',
    PRIMARY KEY (MK_ID, CREATED_TIME, UPDATED_BY, UPDATED_TIME)
) COMMENT = '';

--  凭据表
CREATE TABLE IF NOT EXISTS T_CREDENTIALS
(
    CRE_ID       INT      NOT NULL COMMENT '凭据ID',
    CRE_CONTENT  VARCHAR(255) COMMENT '凭据内容',
    CRE_TYPE     VARCHAR(255) COMMENT '凭据类型',
    CREATED_TIME DATETIME NOT NULL COMMENT '创建时间',
    UPDATED_BY   INT      NOT NULL COMMENT '更新人',
    UPDATED_TIME DATETIME NOT NULL COMMENT '更新时间',
    PRIMARY KEY (CRE_ID, CREATED_TIME, UPDATED_BY, UPDATED_TIME)
) COMMENT = '';

